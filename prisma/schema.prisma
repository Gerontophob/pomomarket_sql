generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model media {
  id                        Int             @id @default(autoincrement())
  updated_at                DateTime        @default(now()) @db.Timestamptz(3)
  created_at                DateTime        @default(now()) @db.Timestamptz(3)
  url                       String?         @db.VarChar
  filename                  String?         @unique(map: "media_filename_idx") @db.VarChar
  mime_type                 String?         @db.VarChar
  filesize                  Decimal?        @db.Decimal
  width                     Decimal?        @db.Decimal
  height                    Decimal?        @db.Decimal
  focal_x                   Decimal?        @db.Decimal
  focal_y                   Decimal?        @db.Decimal
  sizes_thumbnail_url       String?         @db.VarChar
  sizes_thumbnail_width     Decimal?        @db.Decimal
  sizes_thumbnail_height    Decimal?        @db.Decimal
  sizes_thumbnail_mime_type String?         @db.VarChar
  sizes_thumbnail_filesize  Decimal?        @db.Decimal
  sizes_thumbnail_filename  String?         @db.VarChar
  sizes_card_url            String?         @db.VarChar
  sizes_card_width          Decimal?        @db.Decimal
  sizes_card_height         Decimal?        @db.Decimal
  sizes_card_mime_type      String?         @db.VarChar
  sizes_card_filesize       Decimal?        @db.Decimal
  sizes_card_filename       String?         @db.VarChar
  sizes_tablet_url          String?         @db.VarChar
  sizes_tablet_width        Decimal?        @db.Decimal
  sizes_tablet_height       Decimal?        @db.Decimal
  sizes_tablet_mime_type    String?         @db.VarChar
  sizes_tablet_filesize     Decimal?        @db.Decimal
  sizes_tablet_filename     String?         @db.VarChar
  media_rels                media_rels[]
  products_rels             products_rels[]

  @@index([created_at])
  @@index([sizes_card_filename], map: "media_sizes_card_sizes_card_filename_idx")
  @@index([sizes_tablet_filename], map: "media_sizes_tablet_sizes_tablet_filename_idx")
  @@index([sizes_thumbnail_filename], map: "media_sizes_thumbnail_sizes_thumbnail_filename_idx")
}

model media_rels {
  id        Int    @id @default(autoincrement())
  order     Int?
  parent_id Int
  path      String @db.VarChar
  users_id  Int?
  media     media  @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "media_rels_parent_fk")
  users     users? @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "media_rels_users_fk")

  @@index([order])
  @@index([parent_id], map: "media_rels_parent_idx")
  @@index([path])
}

model orders {
  id          Int           @id @default(autoincrement())
  ispaid      Boolean       @map("_ispaid")
  updated_at  DateTime      @default(now()) @db.Timestamptz(3)
  created_at  DateTime      @default(now()) @db.Timestamptz(3)
  orders_rels orders_rels[]

  @@index([created_at])
}

model orders_rels {
  id          Int       @id @default(autoincrement())
  order       Int?
  parent_id   Int
  path        String    @db.VarChar
  users_id    Int?
  products_id Int?
  orders      orders    @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_rels_parent_fk")
  products    products? @relation(fields: [products_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_rels_products_fk")
  users       users?    @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_rels_users_fk")

  @@index([order])
  @@index([parent_id], map: "orders_rels_parent_idx")
  @@index([path])
}

model payload_migrations {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar
  batch      Decimal? @db.Decimal
  updated_at DateTime @default(now()) @db.Timestamptz(3)
  created_at DateTime @default(now()) @db.Timestamptz(3)

  @@index([created_at])
}

model payload_preferences {
  id                       Int                        @id @default(autoincrement())
  key                      String?                    @db.VarChar
  value                    Json?
  updated_at               DateTime                   @default(now()) @db.Timestamptz(3)
  created_at               DateTime                   @default(now()) @db.Timestamptz(3)
  payload_preferences_rels payload_preferences_rels[]

  @@index([created_at])
  @@index([key])
}

model payload_preferences_rels {
  id                  Int                 @id @default(autoincrement())
  order               Int?
  parent_id           Int
  path                String              @db.VarChar
  users_id            Int?
  payload_preferences payload_preferences @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_preferences_rels_parent_fk")
  users               users?              @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_preferences_rels_users_fk")

  @@index([order])
  @@index([parent_id], map: "payload_preferences_rels_parent_idx")
  @@index([path])
}

model products {
  id              Int                              @id @default(autoincrement())
  name            String                           @db.VarChar
  description     String?                          @db.VarChar
  price           Decimal                          @db.Decimal
  category        enum_products_category
  approvedForSale enum_products_approved_for_sale?
  price_id        String?                          @db.VarChar
  stripe_id       String?                          @db.VarChar
  updated_at      DateTime                         @default(now()) @db.Timestamptz(3)
  created_at      DateTime                         @default(now()) @db.Timestamptz(3)
  orders_rels     orders_rels[]
  products_images products_images[]
  products_rels   products_rels[]
  users_rels      users_rels[]

  @@index([created_at])
}

model products_images {
  order     Int      @map("_order")
  parent_id Int      @map("_parent_id")
  id        String   @id @db.VarChar
  products  products @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "products_images_parent_id_fk")

  @@index([order], map: "products_images_order_idx")
  @@index([parent_id], map: "products_images_parent_id_idx")
}

model products_rels {
  id        Int      @id @default(autoincrement())
  order     Int?
  parent_id Int
  path      String   @db.VarChar
  users_id  Int?
  media_id  Int?
  media     media?   @relation(fields: [media_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "products_rels_media_fk")
  products  products @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "products_rels_parent_fk")
  users     users?   @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "products_rels_users_fk")

  @@index([order])
  @@index([parent_id], map: "products_rels_parent_idx")
  @@index([path])
}

model users {
  id                        Int                        @id @default(autoincrement())
  role                      enum_users_role
  updated_at                DateTime                   @default(now()) @db.Timestamptz(3)
  created_at                DateTime                   @default(now()) @db.Timestamptz(3)
  email                     String                     @unique(map: "users_email_idx") @db.VarChar
  reset_password_token      String?                    @db.VarChar
  reset_password_expiration DateTime?                  @db.Timestamptz(3)
  salt                      String?                    @db.VarChar
  hash                      String?                    @db.VarChar
  verified                  Boolean?                   @map("_verified")
  verificationtoken         String?                    @map("_verificationtoken") @db.VarChar
  login_attempts            Decimal?                   @db.Decimal
  lock_until                DateTime?                  @db.Timestamptz(3)
  media_rels                media_rels[]
  orders_rels               orders_rels[]
  payload_preferences_rels  payload_preferences_rels[]
  products_rels             products_rels[]
  users_rels                users_rels[]

  @@index([created_at])
}

model users_rels {
  id          Int       @id @default(autoincrement())
  order       Int?
  parent_id   Int
  path        String    @db.VarChar
  products_id Int?
  users       users     @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_rels_parent_fk")
  products    products? @relation(fields: [products_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_rels_products_fk")

  @@index([order])
  @@index([parent_id], map: "users_rels_parent_idx")
  @@index([path])
}

enum enum_products_approved_for_sale {
  pending
  approved
  denied
}

enum enum_products_category {
  legumes
  fruits
  viandes
  produits_laitiers
  boulangerie
}

enum enum_users_role {
  admin
  user
}
